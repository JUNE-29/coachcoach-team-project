<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.coachcoach.dao.MemberDao">

  <resultMap type="Member"              id="MemberMap">
    <id column="member_no"              property="no"/>
    <result column="id"                 property="id"/>
    <result column="name"               property="name"/>
    <result column="gender"             property="gender"/>
    <result column="birth"              property="birth"/>
    <result column="tel"                property="tel"/>
    <result column="email"              property="email"/>
    <result column="password"           property="password"/>
    <result column="photo"              property="photo"/>
    <result column="create_date"        property="createDate"/>
    <result column="withdrawal"         property="withdrawal"/>
    <result column="withdrawal_date"    property="withdrawalDate"/>
    <result column="withdrawal_reason"  property="withdrawalReason"/>
    <result column="goal"               property="goal"/>
    <result column="goal_in"            property="goalIn"/>
    <result column="userkey"            property="authKey"/>
    <result column="auth_status"        property="authStatus"/>
  </resultMap>
  
  <sql id="select">
   member_no,
   id,
   name,
   gender,
   birth,
   tel,
   email,
   password,
   photo,
   create_date, 
   withdrawal, 
   withdrawal_date, 
   withdrawal_reason, 
   goal, 
   goal_in
  </sql>
  
  
   <insert id="insert" parameterType="Member">
    insert into members(
     member_no,
     id,
     password,
     name,
     gender,
     birth,
     tel,
     email,
     photo,
     create_date
    ) values(
      #{no},
      #{id},
      password(#{password}),
      #{name},      
      #{gender},
      #{birth},
      #{tel},
      #{email},      
      #{photo},
      now()
    )
  </insert>
  
  <update id="updateAuthkey" parameterType="Member">
    update members
      set userkey=#{authKey}
    where email=#{email}
  </update>
  
  <update id="updateAuthStatus" parameterType="Member">
    update members
     set auth_status = 1
    where userkey=#{authKey}
  </update>
  
   <select id="findAll" resultMap="MemberMap">
    select 
      <include refid="select"/>
    from 
      members
   </select>


  <select id="findByNo" resultMap="MemberMap" parameterType="int">
    select 
      <include refid="select"/>
    from 
      members
    where 
      member_no=#{no}
  </select>


  <update id="update" parameterType="Member">
    update members
    <set>
      <if test="name != null and name != ''">name=#{name},</if>
      <if test="gender != null">gender=#{gender},</if>
      <if test="birth != null and birth != ''">birth=#{birth},</if>        
      <if test="tel != null and tel != ''">tel=#{tel},</if> 
      <if test="email != null and email != ''">email=#{email},</if>       
      <if test="password != null and password != ''">password=password(#{password}),</if> 
      <if test="photo != null and photo != ''">photo=#{photo},</if>
      <if test="createDate != null">create_date=#{createDate},</if>                    
      <if test="withdrawal != null">withdrawal=#{withdrawal},</if>
      <if test="withdrawalDate != null">withdrawal_date=#{withdrawalDate},</if>              
      <if test="withdrawalReason != null and withdrawalReason != ''">withdrawal_reason=#{withdrawalReason},</if>       
      <if test="goal != null and goal != ''">goal=#{goal},</if>       
      <if test="goalIn != null and goalIn != ''">goal_in=#{goalIn},</if>              
    </set>
    where 
      member_no=#{no}
  </update>
  
 <update id="updateWithdrawal" parameterType="map">
    update members
    <set>
        withdrawal=#{withdrawal},
        withdrawal_date=now(),
        withdrawal_reason=#{withdrawalReason}
    </set>
    where member_no=#{no}
  </update>
  
  
  <delete id="delete" parameterType="int">
    delete from members
    where member_no=#{no}
  </delete>


  <select id="findByKeyword" 
    resultMap="MemberMap" 
    parameterType="string">
    <bind name="keywordPattern" value="'%' + _parameter + '%'"/>
    select 
      <include refid="select"/>
    from 
      members
    where 
      name like #{keywordPattern}
      or email like #{keywordPattern}
      or tel like #{keywordPattern}
  </select>


  <select id="findByIdAndPassword" resultMap="MemberMap" parameterType="map">
    select 
      <include refid="select"/>,
      auth_status
    from members
    where 
      id=#{id} 
      and password=password(#{password})
  </select>
  
  
  <select id="findByNoAndidPassword" resultMap="MemberMap" parameterType="map">
    select 
      <include refid="select"/>
    from members
    where 
      member_no=#{no}
      and id=#{id}
      and password=password(#{password})
  </select>
  
  
  <select id="checkid" resultType="Integer" parameterType="String" >
  select
    count(*)
  from
   members
  where
    id=#{id}
  </select>
  
  <select id="searchId" resultType="String" parameterType="String" >
    select
      ifnull(id, 0) 
    from
      members
    where
      name=#{userName} and email=#{userEmail}
  </select>
  
  <update id="searchPassword" parameterType="map">
      update members
    <set>
        password=password(#{param3})
    </set>
    where
      id=#{param1} and email=#{param2}
  </update>
  
  <select id="findById" resultType="Member" parameterType="String">
    select
      <include refid="select"/>
    from
      members
    where
      id= #{userId}
  </select>
  
    <select id="searchPw" resultType="int" parameterType="String" >
    select
      count(*)
    from
      members
    where
      id=#{userId} and email=#{userEmail}
  </select>
  
</mapper>







