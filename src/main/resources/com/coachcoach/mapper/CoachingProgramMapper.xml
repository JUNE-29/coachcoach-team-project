<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.coachcoach.dao.CoachingProgramDao">

  <resultMap type="CoachingProgram" id="CoachingProgramMap">
    <id column="program_no"  property="no"/>
    <result column="coach_no"       property="coachNo"/>
    <result column="name"       property="name"/>
    <result column="introduce"  property="introduce"/>
    <result column="fee"    property="fee"/>
    <result column="coaching_type" property="coachingType"/>
    
    <association property="coach" javaType="Coach">
      <id column="coach_no"   property="no"/>
      <result column="coach_name"  property="name"/>
      <result column="photo"  property="photo"/>
      <result column="area"  property="area"/>
      <result column="address"  property="address"/>
      <result column="latitude"  property="latitude"/>
      <result column="longitude"  property="longitude"/>
      <result column="career"  property="career"/>
      <result column="certification"  property="certification"/>
      <result column="coach_introduce"  property="introduce"/>
      <result column="work_type"  property="workType"/>
    </association>

     <association property="mcp" javaType="MemberCoachingProgram">
      <id column="member_program_no"  property="no"/>
      <result column="member_no"       property="memberNo"/>
      <result column="program_no"       property="programNo"/>
      <result column="remark"  property="remark"/>
      <result column="status"    property="status"/>
      <result column="request_date" property="requestDate"/>
      <result column="pay_date" property="payDate"/>
      <result column="start_date" property="startDate"/>
      <result column="end_date" property="endDate"/>
      <result column="etc" property="etc"/>
      <result column="review" property="review"/>
      <result column="star_rate" property="starRate"/>
    </association>
    
     <collection property="coachingProgramTags" ofType="Integer">
      <!-- <result column="id"/> -->
     </collection> 
  </resultMap>
  
  
   <insert id="insert" parameterType="CoachingProgram"
   useGeneratedKeys="true" keyColumn="program_no" keyProperty="no">
    insert into coaching_programs(
     coach_no,
     name,
     introduce,
     fee,
     coaching_type
    ) values(
      #{coachNo},
      #{name},
      #{introduce},
      #{fee},      
      #{coachingType}
    )
  </insert>
  
  <select id="findAllByCoachNo" resultMap="CoachingProgramMap" parameterType="int">
    select
      c.coach_no,
      c.program_no,
      c.name,
      c.introduce,
      c.fee
    from 
     coaching_programs c
      join coaches ch on c.coach_no=ch.coach_no
    where 
      c.coach_no=#{coachNo}
      AND c.delete_status IS NULL
    order by program_no desc
      <!-- join workout_tags w on w.tag_no=ct.tag_no 태그는 코칭프로그램태그 맵퍼따로-->
  </select>
  
  <select id= "findByProgramNo" resultMap="CoachingProgramMap" parameterType="int">
     select
      program_no,
      name,
      coaching_type,
      introduce,
      fee
     from
      coaching_programs
     where
      program_no=#{no}
  </select>
 
  <select id="findByNo" resultMap="CoachingProgramMap" parameterType="int">
     select  
      cp.program_no,
      cp.coach_no,
      c.name coach_name,
      c.photo,
      c.area,
      c.career,
      c.certification,
      c.introduce coach_introduce,
      c.address,
      c.latitude,
      c.longitude,
      c.work_type,
      cp.name,
      cp.introduce,
      cp.fee,
      cp.coaching_type
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
        where 
      cp.program_no=#{no}
  </select>


  <update id="update" parameterType="CoachingProgram">
    update coaching_programs
    <set>
      <if test="name != null and name != ''">name=#{name},</if> 
      <if test="introduce != null and introduce != ''">introduce=#{introduce},</if> 
      <if test="fee > 0">fee=#{fee},</if> 
      <if test="coachingType != null and coachingType != ''">coaching_type=#{coachingType}
      </if>
    </set>
      where 
        program_no=#{no}
  </update>
  
  <update id="deleteUpdate" parameterType="int">
    update coaching_programs
      set
      delete_status='1'
    where 
      program_no=#{no}
  </update>
  
   <delete id="delete" parameterType="int">
    delete from coaching_programs
    where program_no=#{no}
  </delete>
  
  
   <select id="findByKeyword" resultMap="CoachingProgramMap" parameterType="map">
    select 
      cp.program_no,
      c.name coach_name,
      cp.name,
      cp.introduce,
      cp.fee,
      cp.coaching_type
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
      <where>
      <if test="keyword != null">c.name like concat('%', #{keyword}, '%')</if>
      <if test="keyword != null">or cp.name like concat('%', #{keyword}, '%')</if>
      </where>
      order by program_no desc
       limit #{cri.pageStart}, #{cri.perPageNum}
  </select>
  
  <select id="findByGender" resultMap="CoachingProgramMap" parameterType="map">
    select 
      cp.program_no,
      c.name coach_name,
      cp.name,
      cp.introduce,
      cp.coaching_type,
      cp.fee
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
    <where>
      <if test="gender != 2"> c.gender like #{gender}</if>
      <if test="coachingType != null">and cp.coaching_type like #{coachingType}</if>
    </where>
      order by program_no desc
       limit #{cri.pageStart}, #{cri.perPageNum}
  </select>
  
  
   <select id="findByTag" resultMap="CoachingProgramMap" parameterType="map">
    select 
      cp.program_no,
      c.name coach_name,
      cp.name,
      cp.introduce,
      cp.coaching_type,
      cp.fee
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
      join coaching_program_tags cpt on cp.program_no=cpt.program_no
    where tag_no in
  <foreach item="item" index="index" collection="tags"
      open="(" separator="," close=")">
        #{item}
  </foreach>
           order by cp.program_no desc
       limit #{cri.pageStart}, #{cri.perPageNum}
  </select>
  
  
   <select id="findByReview" resultMap="CoachingProgramMap">
    select distinct 
      cp.program_no,
      c.name coach_name,
      cp.name,
      cp.introduce,
      cp.fee,
      rc.count
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
      join member_coaching_programs mcp on cp.program_no=mcp.program_no
      join (select mcp.program_no, count(*) count from member_coaching_programs mcp
    where 
     mcp.review is not null 
    group by mcp.program_no) as rc on cp.program_no=rc.program_no
      order by rc.count desc
       limit #{cri.pageStart}, #{cri.perPageNum}
  </select>
  
  <select id="findByStar" resultMap="CoachingProgramMap">
   select distinct 
      cp.program_no,
      c.name coach_name,
      cp.name,
      cp.introduce,
      cp.fee,
      sr.avg
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
      join member_coaching_programs mcp on cp.program_no=mcp.program_no
      join (select mcp.program_no, avg(star_rate) avg from member_coaching_programs mcp
    where 
     mcp.star_rate is not null 
     group by mcp.program_no) as sr on cp.program_no=sr.program_no
     order by sr.avg desc
       limit #{cri.pageStart}, #{cri.perPageNum}
  </select>
  
  <select id="findAll" resultMap="CoachingProgramMap">
    select  
      cp.program_no,
      cp.coach_no,
      c.name coach_name,
      c.photo,
      c.area,
      c.career,
      c.certification,
      c.introduce coach_introduce,
      c.work_type,
      cp.name,
      cp.introduce,
      cp.fee
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
      order by program_no desc
   </select>
   
   <select id="applyList" resultMap="CoachingProgramMap"  parameterType="int">
       select  
        mcp.member_program_no,
        mcp.member_no,       
        mcp.program_no,        
        mcp.remark,            
        mcp.status,            
        DATE_FORMAT(mcp.request_date, "%Y/%m/%d") as request_date,
        DATE_FORMAT(mcp.pay_date, "%Y/%m/%d") as pay_date,     
        DATE_FORMAT(mcp.start_date, "%Y/%m/%d") as start_date,
        DATE_FORMAT(mcp.end_date, "%Y/%m/%d") as end_date,
        mcp.etc,
        mcp.review,
        cp.name,
        cp.fee,
        cp.coaching_type,
        c.name coach_name
      from 
        member_coaching_programs mcp
         left outer join  coaching_programs cp on cp.program_no=mcp.program_no
          left outer join coaches c on cp.coach_no=c.coach_no
       where
        mcp.member_no=#{no}
       order by mcp.member_program_no desc
       limit #{cri.pageStart}, #{cri.perPageNum}
   </select>
   
   <select id="findByMemberNo" resultMap="CoachingProgramMap" parameterType="map">
      select  
        mcp.member_program_no,
        mcp.member_no,       
        mcp.program_no,        
        mcp.remark,            
        mcp.status,            
        DATE_FORMAT(mcp.request_date, "%Y/%m/%d") as request_date,
        mcp.pay_date,     
        DATE_FORMAT(mcp.start_date, "%Y/%m/%d") as start_date,
        DATE_FORMAT(mcp.end_date, "%Y/%m/%d") as end_date,
        mcp.etc,
        mcp.review,
        cp.coach_no,
        cp.name,
        cp.fee,
        cp.coaching_type,
        c.name coach_name,
        c.photo
      from 
        coaching_programs cp
         join coaches c on cp.coach_no=c.coach_no
         join member_coaching_programs mcp on cp.program_no=mcp.program_no
       where
        mcp.status=#{status} and mcp.member_no=#{no}
       order by mcp.member_program_no desc
       limit #{cri.pageStart}, #{cri.perPageNum}
   </select>
   
   <select id="findByOrderNo" resultMap="CoachingProgramMap" parameterType="map">
      select  
        mcp.member_program_no,
        mcp.member_no,       
        mcp.program_no,        
        mcp.remark,            
        mcp.status,            
        DATE_FORMAT(mcp.request_date, "%Y/%m/%d") as request_date,
        mcp.pay_date,     
        DATE_FORMAT(mcp.start_date, "%Y/%m/%d") as start_date,
        DATE_FORMAT(mcp.end_date, "%Y/%m/%d") as end_date,
        mcp.etc,
        mcp.review,
        cp.coach_no,
        cp.name,
        cp.fee,
        cp.coaching_type,
        c.name coach_name,
        c.photo
      from 
        coaching_programs cp
         join coaches c on cp.coach_no=c.coach_no
         join member_coaching_programs mcp on cp.program_no=mcp.program_no
       where
        mcp.status=#{status} and member_program_no=#{no}
       order by mcp.member_program_no desc
   </select>
   
   
   <select id="pageList" resultMap="CoachingProgramMap" parameterType="map">
     select  
      cp.program_no,
      cp.coach_no,
      c.name coach_name,
      c.photo,
      c.area,
      c.career,
      c.certification,
      c.introduce coach_introduce,
      c.work_type,
      cp.name,
      cp.introduce,
      cp.coaching_type,
      cp.fee
     from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
     order by cp.program_no desc
       limit #{cri.pageStart}, #{cri.perPageNum}
  </select>
  
   <select id="pageCount" resultType="Integer">
       select
         count(*)
        from
         coaching_programs
  </select>
  


     <select id="selectStar" resultMap="CoachingProgramMap" parameterType="int">
      select 
       round(avg(star_rate)) as star_rate
       from 
       member_coaching_programs mcp 
       join 
       coaching_programs cp on mcp.program_no=cp.program_no 
       where mcp.program_no=#{no}
  </select>
  
  <select id="findByKeywordCnt"  resultType="Integer" parameterType="string">
    select 
      count(*)
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
      <where>
      <if test="keyword != null">c.name like concat('%', #{keyword}, '%')</if>
      <if test="keyword != null">or cp.name like concat('%', #{keyword}, '%')</if>
      </where>
      order by program_no desc
  </select>
  
  <select id="findByTagCnt"  resultType="Integer"  parameterType="map">
    select 
     count(*)
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
      join coaching_program_tags cpt on cp.program_no=cpt.program_no
    where tag_no in
  <foreach item="item" index="index" collection="tags"
      open="(" separator="," close=")">
        #{item}
  </foreach>
           order by cp.program_no desc
  </select>
  
  <select id="findByGenderCnt"   resultType="Integer" parameterType="map">
    select 
      count(*)
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
    <where>
      <if test="gender != 2"> c.gender like #{gender}</if>
      <if test="coachingType != null">and cp.coaching_type like #{coachingType}</if>
    </where>
      order by program_no desc
  </select>
  
    <select id="findByReviewCnt"   resultType="Integer" parameterType="map">
    select 
      count(*)
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
      join member_coaching_programs mcp on cp.program_no=mcp.program_no
      join (select mcp.program_no, count(*) count from member_coaching_programs mcp
    where 
     mcp.review is not null 
    group by mcp.program_no) as rc on cp.program_no=rc.program_no
      order by rc.count desc
  </select>
  
    <select id="findByStarCnt"   resultType="Integer" parameterType="map">
    select 
      count(*)
    from 
      coaching_programs cp 
      join coaches c on cp.coach_no=c.coach_no
      join member_coaching_programs mcp on cp.program_no=mcp.program_no
      join (select mcp.program_no, avg(star_rate) avg from member_coaching_programs mcp
    where 
     mcp.star_rate is not null 
     group by mcp.program_no) as sr on cp.program_no=sr.program_no
     order by sr.avg desc
  </select>
  
  
</mapper>







